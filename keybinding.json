// Place your key bindings in this file to override the defaults
[
	{
		"key": "space",
		"command": "vspacecode.space",
		"when": "activeEditorGroupEmpty && focusedView == '' && !whichkeyActive && !inputFocus"
	},
	{
		"key": "space",
		"command": "vspacecode.space",
		"when": "sideBarFocus && !inputFocus && !whichkeyActive"
	},
	{
		"key": "tab",
		"command": "extension.vim_tab",
		"when": "editorFocus && vim.active && !inDebugRepl && vim.mode != 'Insert' && editorLangId != 'magit'"
	},
	{
		"key": "tab",
		"command": "-extension.vim_tab",
		"when": "editorFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"
	},
	{
		"key": "x",
		"command": "magit.discard-at-point",
		"when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
	},
	{
		"key": "k",
		"command": "-magit.discard-at-point"
	},
	{
		"key": "-",
		"command": "magit.reverse-at-point",
		"when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
	},
	{
		"key": "v",
		"command": "-magit.reverse-at-point"
	},
	{
		"key": "shift+-",
		"command": "magit.reverting",
		"when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
	},
	{
		"key": "shift+v",
		"command": "-magit.reverting"
	},
	{
		"key": "shift+o",
		"command": "magit.resetting",
		"when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
	},
	{
		"key": "shift+x",
		"command": "-magit.resetting"
	},
	{
		"key": "x",
		"command": "-magit.reset-mixed"
	},
	{
		"key": "ctrl+u x",
		"command": "-magit.reset-hard"
	},
	{
		"key": "y",
		"command": "-magit.show-refs"
	},
	{
		"key": "y",
		"command": "vspacecode.showMagitRefMenu",
		"when": "editorTextFocus && editorLangId == 'magit' && vim.mode == 'Normal'"
	},
	{
		"key": "ctrl+j",
		"command": "workbench.action.quickOpenSelectNext",
		"when": "inQuickOpen"
	},
	{
		"key": "ctrl+k",
		"command": "workbench.action.quickOpenSelectPrevious",
		"when": "inQuickOpen"
	},
	{
		"key": "ctrl+j",
		"command": "selectNextSuggestion",
		"when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
	},
	{
		"key": "ctrl+k",
		"command": "selectPrevSuggestion",
		"when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
	},
	{
		"key": "ctrl+l",
		"command": "acceptSelectedSuggestion",
		"when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
	},
	{
		"key": "ctrl+j",
		"command": "showNextParameterHint",
		"when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
	},
	{
		"key": "ctrl+k",
		"command": "showPrevParameterHint",
		"when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
	},
	{
		"key": "ctrl+j",
		"command": "selectNextCodeAction",
		"when": "codeActionMenuVisible"
	},
	{
		"key": "ctrl+k",
		"command": "selectPrevCodeAction",
		"when": "codeActionMenuVisible"
	},
	{
		"key": "ctrl+l",
		"command": "acceptSelectedCodeAction",
		"when": "codeActionMenuVisible"
	},
	{
		"key": "ctrl+h",
		"command": "file-browser.stepOut",
		"when": "inFileBrowser"
	},
	{
		"key": "ctrl+l",
		"command": "file-browser.stepIn",
		"when": "inFileBrowser"
	},
	{
		"key": "ctrl+n",
		"command": "cursorDown",
		"when": "textInputFocus"
	},
	{
		"key": "ctrl+p",
		"command": "cursorUp",
		"when": "textInputFocus"
	},
	{
		"key": "ctrl+b",
		"command": "cursorLeft",
		"when": "textInputFocus"
	},
	{
		"key": "ctrl+f",
		"command": "cursorRight",
		"when": "textInputFocus"
	},
	{
		"key": "ctrl+f",
		"command": "cursorRight",
		"when": "terminalFocus && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocus && terminalProcessSupported && !terminalAltBufferActive"
	},
	{
		"key": "alt+b",
		"command": "cursorWordLeft",
		"when": "textInputFocus && !accessibilityModeEnabled"
	},
	{
		"key": "alt+f",
		"command": "cursorWordEndRight",
		"when": "textInputFocus && !accessibilityModeEnabled"
	},
	{
		"key": "alt+d",
		"command": "deleteWordRight",
		"when": "textInputFocus && !editorReadonly"
	},
	{
		"key": "alt+w",
		"command": "editor.action.clipboardCopyAction"
	},
	{
		"key": "ctrl+y",
		"command": "editor.action.clipboardPasteAction"
	},
	{
		"key": "ctrl+n",
		"command": "workbench.action.togglePanel"
	},
	{
		"key": "ctrl+n",
		"command": "workbench.action.quickOpenSelectNext",
		"when": "inQuickOpen"
	},
	{
		"key": "ctrl+n",
		"command": "extension.vim_ctrl+j",
		"when": "editorTextFocus && vim.active && vim.use<C-j> && !inDebugRepl"
	},
	{
		"key": "ctrl+n",
		"command": "magit.move-next-entity",
		"when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
	},
	{
		"key": "ctrl+n",
		"command": "selectNextCodeAction",
		"when": "codeActionMenuVisible"
	},
	{
		"key": "ctrl+n",
		"command": "selectNextSuggestion",
		"when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
	},
	{
		"key": "ctrl+n",
		"command": "showNextParameterHint",
		"when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
	},
	{
		"key": "ctrl+p",
		"command": "workbench.action.quickOpenSelectPrevious",
		"when": "inQuickOpen"
	},
	{
		"key": "ctrl+p",
		"command": "extension.vim_ctrl+k",
		"when": "editorTextFocus && vim.active && vim.use<C-k> && !inDebugRepl"
	},
	{
		"key": "ctrl+p",
		"command": "magit.move-previous-entity",
		"when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
	},
	{
		"key": "ctrl+p",
		"command": "selectPrevCodeAction",
		"when": "codeActionMenuVisible"
	},
	{
		"key": "ctrl+p",
		"command": "selectPrevSuggestion",
		"when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
	},
	{
		"key": "ctrl+p",
		"command": "showPrevParameterHint",
		"when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
	},
	{
		"key": "alt+k",
		"command": "editor.action.moveLinesUpAction",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "alt+j",
		"command": "editor.action.moveLinesDownAction",
		"when": "editorTextFocus && !editorReadonly"
	},
    {
        "key": "ctrl+h",
        "command": "workbench.action.navigateLeft",
        "when": "!inQuickOpen && !suggestWidgetVisible && !parameterHintsVisible && !isInDiffEditor"
    },
    {
        "key": "ctrl+j",
        "command": "workbench.action.navigateDown",
        "when": "!codeActionMenuVisible && !inQuickOpen && !suggestWidgetVisible && !parameterHintsVisible"
    },
    {
        "key": "ctrl+k",
        "command": "workbench.action.navigateUp",
        "when": "!codeActionMenuVisible && !inQuickOpen && !suggestWidgetVisible && !parameterHintsVisible"
    },
    {
        "key": "ctrl+l",
        "command": "workbench.action.navigateRight",
        "when": "!codeActionMenuVisible && !inQuickOpen && !suggestWidgetVisible && !parameterHintsVisible && !isInDiffEditor"
    },
    // Quick Navigation for diff view
    {
        "key": "ctrl+h",
        "command": "workbench.action.compareEditor.focusSecondarySide",
        "when": "isInDiffEditor && !isInDiffLeftEditor"
    },
    {
        "key": "ctrl+h",
        "command": "workbench.action.navigateLeft",
        "when": "isInDiffEditor && isInDiffLeftEditor"
    },
    {
        "key": "ctrl+l",
        "command": "workbench.action.compareEditor.focusPrimarySide",
        "when": "isInDiffEditor && isInDiffLeftEditor"
    },
    {
        "key": "ctrl+l",
        "command": "workbench.action.navigateRight",
        "when": "isInDiffEditor && !isInDiffLeftEditor"
    },
    {
        "key": "tab",
        "command": "list.toggleExpand",
        "when": "listFocus && !inputFocus"
    },
	{
		"key": "ctrl+w",
		"command": "editor.action.clipboardCutAction"
	},
	{
		"key": "ctrl+w",
		"command": "extension.vim_ctrl+x",
		"when": "editorTextFocus && vim.active && vim.use<C-x> && !inDebugRepl"
	},
	{
		"key": "ctrl+w",
		"command": "filesExplorer.cut",
		"when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
	},
	{
		"key": "ctrl+w",
		"command": "cut"
	},
	{
		"key": "ctrl+alt+j",
		"command": "editor.action.insertCursorBelow",
		"when": "editorTextFocus"
	},
	{
		"key": "ctrl+x ctrl+s",
		"command": "workbench.action.files.save"
	},
	{
		"key": "ctrl+r",
		"command": "actions.find",
		"when": "editorFocus || editorIsOpen"
	},
	{
		"key": "ctrl+alt+k",
		"command": "editor.action.insertCursorAbove",
		"when": "editorTextFocus"
	},
	{
		"key": "ctrl+r",
		"command": "editor.action.startFindReplaceAction",
		"when": "editorFocus || editorIsOpen"
	},
	{
		"key": "ctrl+g",
		"command": "notebook.cell.quitEdit",
		"when": "inputFocus && notebookEditorFocused && !editorHasMultipleSelections && !editorHasSelection && !editorHoverVisible"
	},
	{
		"key": "ctrl+g",
		"command": "notebook.cell.quitEdit",
		"when": "inputFocus && notebookEditorFocused && vim.active && !editorHasSelection && !editorHoverVisible && vim.mode == 'Normal'"
	},
	{
		"key": "ctrl+g",
		"command": "editor.debug.action.closeExceptionWidget",
		"when": "exceptionWidgetVisible"
	},
	{
		"key": "ctrl+g",
		"command": "welcome.goBack",
		"when": "inWelcome && activeEditor == 'gettingStartedPage'"
	},
	{
		"key": "ctrl+g",
		"command": "editor.action.cancelSelectionAnchor",
		"when": "editorTextFocus && selectionAnchorSet"
	},
	{
		"key": "ctrl+g",
		"command": "settings.action.focusLevelUp",
		"when": "inSettingsEditor && !inSettingsJSONEditor && !inSettingsSearch"
	},
	{
		"key": "ctrl+g",
		"command": "settings.action.clearSearchResults",
		"when": "inSettingsEditor && inSettingsSearch"
	},
	{
		"key": "ctrl+g",
		"command": "search.action.cancel",
		"when": "listFocus && searchViewletVisible && !inputFocus && searchState != '0'"
	},
	{
		"key": "ctrl+g",
		"command": "search.action.focusQueryEditorWidget",
		"when": "inSearchEditor"
	},
	{
		"key": "ctrl+g",
		"command": "inlayHints.stopReadingLineWithHint",
		"when": "isReadingLineWithInlayHints"
	},
	{
		"key": "ctrl+g",
		"command": "notifications.hideList",
		"when": "notificationCenterVisible"
	},
	{
		"key": "ctrl+g",
		"command": "editor.action.inlineSuggest.hide",
		"when": "inlineSuggestionVisible"
	},
	{
		"key": "ctrl+g",
		"command": "workbench.action.terminal.clearSelection",
		"when": "terminalFocus && terminalHasBeenCreated && terminalTextSelected && !terminalFindVisible || terminalFocus && terminalProcessSupported && terminalTextSelected && !terminalFindVisible"
	},
	{
		"key": "ctrl+g",
		"command": "workbench.action.terminal.hideFind",
		"when": "terminalFindVisible && terminalFocus && terminalHasBeenCreated || terminalFindVisible && terminalFocus && terminalProcessSupported"
	},
	{
		"key": "ctrl+g",
		"command": "editor.action.escapeFocusHover",
		"when": "editorHoverFocused"
	},
	{
		"key": "ctrl+g",
		"command": "breadcrumbs.selectEditor",
		"when": "breadcrumbsActive && breadcrumbsVisible"
	},
	{
		"key": "ctrl+g",
		"command": "cancelLinkedEditingInput",
		"when": "LinkedEditingInputVisible && editorTextFocus"
	},
	{
		"key": "ctrl+g",
		"command": "cancelRenameInput",
		"when": "editorFocus && renameInputVisible"
	},
	{
		"key": "ctrl+g",
		"command": "cancelSelection",
		"when": "editorHasSelection && textInputFocus"
	},
	{
		"key": "ctrl+g",
		"command": "closeAccessibilityHelp",
		"when": "accessibilityHelpWidgetVisible && editorFocus"
	},
	{
		"key": "ctrl+g",
		"command": "closeBreakpointWidget",
		"when": "breakpointWidgetVisible && textInputFocus"
	},
	{
		"key": "ctrl+g",
		"command": "closeDirtyDiff",
		"when": "dirtyDiffVisible"
	},
	{
		"key": "ctrl+g",
		"command": "closeFindWidget",
		"when": "editorFocus && findWidgetVisible && !isComposing"
	},
	{
		"key": "ctrl+g",
		"command": "closeMarkersNavigation",
		"when": "editorFocus && markersNavigationVisible"
	},
	{
		"key": "ctrl+g",
		"command": "closeParameterHints",
		"when": "editorFocus && parameterHintsVisible"
	},
	{
		"key": "ctrl+g",
		"command": "closeReferenceSearch",
		"when": "inReferenceSearchEditor && !config.editor.stablePeek"
	},
	{
		"key": "ctrl+g",
		"command": "closeReferenceSearch",
		"when": "referenceSearchVisible && !config.editor.stablePeek"
	},
	{
		"key": "ctrl+g",
		"command": "closeReplaceInFilesWidget",
		"when": "replaceInputBoxFocus && searchViewletVisible"
	},
	{
		"key": "ctrl+g",
		"command": "commentsClearFilterText",
		"when": "commentsFilterFocus"
	},
	{
		"key": "ctrl+g",
		"command": "editor.action.selectEditor",
		"when": "stickyScrollFocused"
	},
	{
		"key": "ctrl+g",
		"command": "editor.action.webvieweditor.hideFind",
		"when": "webviewFindWidgetVisible && !editorFocus && activeEditor == 'WebviewEditor'"
	},
	{
		"key": "ctrl+g",
		"command": "editor.cancelOperation",
		"when": "cancellableOperation"
	},
	{
		"key": "ctrl+g",
		"command": "editor.closeCallHierarchy",
		"when": "callHierarchyVisible && !config.editor.stablePeek"
	},
	{
		"key": "ctrl+g",
		"command": "editor.closeTestPeek",
		"when": "testing.isInPeek && !config.editor.stablePeek || testing.isPeekVisible && !config.editor.stablePeek"
	},
	{
		"key": "ctrl+g",
		"command": "editor.closeTypeHierarchy",
		"when": "typeHierarchyVisible && !config.editor.stablePeek"
	},
	{
		"key": "ctrl+g",
		"command": "editor.gotoNextSymbolFromResult.cancel",
		"when": "hasSymbols"
	},
	{
		"key": "ctrl+g",
		"command": "extension.vim_escape",
		"when": "editorTextFocus && vim.active && !inDebugRepl"
	},
	{
		"key": "ctrl+g",
		"command": "filesExplorer.cancelCut",
		"when": "explorerResourceCut && filesExplorerFocus && foldersViewVisible && !inputFocus"
	},
	{
		"key": "ctrl+g",
		"command": "hideCodeActionWidget",
		"when": "codeActionMenuVisible"
	},
	{
		"key": "ctrl+g",
		"command": "hideSuggestWidget",
		"when": "suggestWidgetVisible && textInputFocus"
	},
	{
		"key": "ctrl+g",
		"command": "interactive.input.clear",
		"when": "!LinkedEditingInputVisible && !accessibilityHelpWidgetVisible && !breakpointWidgetVisible && !editorHasMultipleSelections && !editorHasSelection && !editorHoverVisible && !exceptionWidgetVisible && !findWidgetVisible && !inSnippetMode && !isComposing && !markersNavigationVisible && !notificationToastsVisible && !parameterHintsVisible && !renameInputVisible && !selectionAnchorSet && !suggestWidgetVisible && resourceScheme == 'vscode-interactive'"
	},
	{
		"key": "ctrl+g",
		"command": "interactiveEditor.cancel",
		"when": "interactiveEditorHasProvider && interactiveEditorVisible"
	},
	{
		"key": "ctrl+g",
		"command": "interactiveEditor.stop",
		"when": "interactiveEditorHasActiveRequest && interactiveEditorHasProvider && interactiveEditorVisible && !interactiveEditorEmpty"
	},
	{
		"key": "ctrl+g",
		"command": "keybindings.editor.clearSearchResults",
		"when": "inKeybindings && inKeybindingsSearch"
	},
	{
		"key": "ctrl+g",
		"command": "keybindings.editor.rejectWhenExpression",
		"when": "inKeybindings && whenFocus && !suggestWidgetVisible"
	},
	{
		"key": "ctrl+g",
		"command": "leaveEditorMessage",
		"when": "messageVisible"
	},
	{
		"key": "ctrl+g",
		"command": "leaveSnippet",
		"when": "editorTextFocus && inSnippetMode"
	},
	{
		"key": "ctrl+g",
		"command": "list.clear",
		"when": "listFocus && listHasSelectionOrFocus && !inputFocus"
	},
	{
		"key": "ctrl+g",
		"command": "list.closeFind",
		"when": "listFocus && treeFindOpen"
	},
	{
		"key": "ctrl+g",
		"command": "notebook.hideFind",
		"when": "notebookEditorFocused && notebookFindWidgetFocused"
	},
	{
		"key": "ctrl+g",
		"command": "notifications.hideToasts",
		"when": "notificationToastsVisible"
	},
	{
		"key": "ctrl+g",
		"command": "notifications.hideToasts",
		"when": "notificationFocus && notificationToastsVisible"
	},
	{
		"key": "ctrl+g",
		"command": "problems.action.clearFilterText",
		"when": "problemsFilterFocus"
	},
	{
		"key": "ctrl+g",
		"command": "removeSecondaryCursors",
		"when": "editorHasMultipleSelections && textInputFocus"
	},
	{
		"key": "ctrl+g",
		"command": "workbench.action.closeQuickOpen",
		"when": "inQuickOpen"
	},
	{
		"key": "ctrl+g",
		"command": "workbench.action.hideComment",
		"when": "commentEditorFocused"
	},
	{
		"key": "ctrl+g",
		"command": "workbench.action.terminal.hideSuggestWidget",
		"when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible"
	},
	{
		"key": "ctrl+g",
		"command": "workbench.banner.focusBanner",
		"when": "bannerFocused"
	},
	{
		"key": "ctrl+g",
		"command": "workbench.statusBar.clearFocus",
		"when": "statusBarFocused"
	},
	{
		"key": "ctrl+k",
		"command": "deleteAllRight"
	},
	{
		"key": "ctrl+l",
		"command": "workbench.action.terminal.clear"
	},
	{
		"key": "ctrl+s",
		"command": "actions.find",
		"when": "editorFocus || editorIsOpen"
	},
	{
		"key": "ctrl+e",
		"command": "cursorEnd",
		"when": "terminalFocus && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocus && terminalProcessSupported && !terminalAltBufferActive"
	},
]
